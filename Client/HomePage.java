/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Anjali
 */
package Client;
import static Client.Client.socket;
import java.awt.event.*;
import java.awt.*;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class HomePage extends javax.swing.JFrame {

    /**
     * Creates new form HomePage
     * @param usnm
     */
    String usnm;
    public HomePage(String usnm) {
        initComponents();
        this.usnm=usnm;
        setLocation(200,200);
       JLabel user=new JLabel(usnm);
       user.setFont(new Font("Times new roman", Font.BOLD,18));
       user.setForeground(Color.white);
       user.setBounds(580,5,100,50);
       Panel.add(user);
    }
    
    public void close() {
        WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        TrainBetweenStationsButton = new javax.swing.JButton();
        CancelledTrainsButton = new javax.swing.JButton();
        BookingHistoryButton = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        Panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        TrainBetweenStationsButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TrainBetweenStationsButton.setText("See Train Between Stations");
        TrainBetweenStationsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrainBetweenStationsButtonActionPerformed(evt);
            }
        });

        CancelledTrainsButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CancelledTrainsButton.setText("View Cancelled Trains");
        CancelledTrainsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelledTrainsButtonActionPerformed(evt);
            }
        });

        BookingHistoryButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BookingHistoryButton.setText("Your Booking History");
        BookingHistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookingHistoryButtonActionPerformed(evt);
            }
        });

        logout.setText("logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        Panel.setBackground(new java.awt.Color(204, 0, 102));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("HOME");

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(CancelledTrainsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(BookingHistoryButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(TrainBetweenStationsButton)))
                .addContainerGap(108, Short.MAX_VALUE))
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(TrainBetweenStationsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelledTrainsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BookingHistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelledTrainsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelledTrainsButtonActionPerformed
        try{ 
            ObjectOutputStream objectOutputStream=new ObjectOutputStream(socket.getOutputStream());         
            ObjectInputStream objectInputStream=new ObjectInputStream(socket.getInputStream());
            objectOutputStream.writeInt(8);
            objectOutputStream.flush();   
            System.out.println("sending 8");
            CancelledTrainsRequest bh = new  CancelledTrainsRequest();
            objectOutputStream.writeObject(bh);
            System.out.println("sending values");
            objectOutputStream.flush(); 
            try{
                 ArrayList<ArrayList<String>> ctlist = (ArrayList<ArrayList<String>>)objectInputStream.readObject();
                     if(ctlist != null)
                     {
                         CancelledTrains ct = new CancelledTrains();
                         ct.setVisible(true);
                         int cn = ctlist.size();
                         for(int i=0;i<cn;i++)
                         {
                             String train_no = String.valueOf(ctlist.get(i).get(0));
                             String date = String.valueOf(ctlist.get(i).get(1));
                             
                             String data[] = {train_no,date};
                             DefaultTableModel tblModel = (DefaultTableModel)ct.getCancelledTrainsTable().getModel();
                             tblModel.addRow(data);
                         }
                         this.hide(); 
                     }
                      else
                     {
                         JOptionPane.showMessageDialog(this , "There are no cancelled trains!" );
                     }
            }catch (ClassNotFoundException ex) {
                        ex.printStackTrace();
                }
            }catch(IOException e){
            System.out.print(e+"button here");
            } 
    }//GEN-LAST:event_CancelledTrainsButtonActionPerformed

    private void BookingHistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookingHistoryButtonActionPerformed
       try{ 
            ObjectOutputStream objectOutputStream=new ObjectOutputStream(socket.getOutputStream());         
            ObjectInputStream objectInputStream=new ObjectInputStream(socket.getInputStream());
            objectOutputStream.writeInt(6);
            objectOutputStream.flush();   
            System.out.println("sending 6");
            BookingHistoryRequest bh = new  BookingHistoryRequest(usnm);
            objectOutputStream.writeObject(bh);
            System.out.println("sending values");
            objectOutputStream.flush();   
               try{
                    ArrayList<ArrayList<String>> blist = (ArrayList<ArrayList<String>>)objectInputStream.readObject();
                     if(blist != null)
                     {
                        BookingHistory b = new BookingHistory();
                        b.setVisible(true);
                        int bn = blist.size();
                         for(int i=0; i<bn ;i++)
                         {
                             String passenger_id = String.valueOf(blist.get(i).get(0));
                             String username = String.valueOf(blist.get(i).get(1));
                             String name = String.valueOf(blist.get(i).get(2));
                             String age = String.valueOf(blist.get(i).get(3));
                             String gender = String.valueOf(blist.get(i).get(4));
                             String status = String.valueOf(blist.get(i).get(5));
                             String coach_no = String.valueOf(blist.get(i).get(6));
                             String date = String.valueOf(blist.get(i).get(7));
                             String source = String.valueOf(blist.get(i).get(8));
                             String destination = String.valueOf(blist.get(i).get(9));
                             
                             String tbData[] = {passenger_id,username,name,age,gender,status,coach_no,date,source,destination};
                             
                             DefaultTableModel model = (DefaultTableModel)b.getBookingHistoryTable().getModel();
                             model.addRow(tbData);   
                         }
                         this.hide();
                     }
                     else
                     {
                         JOptionPane.showMessageDialog(this , "You have no booking History" );
                     }
                    }    catch (ClassNotFoundException ex) {
                        ex.printStackTrace();
                }
                     
            }catch(IOException e){
            System.out.print(e+"button here");
            } 

    
    }//GEN-LAST:event_BookingHistoryButtonActionPerformed

    private void TrainBetweenStationsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrainBetweenStationsButtonActionPerformed
       close();
       TrainsBetween tb = new TrainsBetween(usnm);
       tb.setVisible(true);
    }//GEN-LAST:event_TrainBetweenStationsButtonActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        this.hide();
        new LoginPage().setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new HomePage("xyz123").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BookingHistoryButton;
    private javax.swing.JButton CancelledTrainsButton;
    private javax.swing.JPanel Panel;
    private javax.swing.JButton TrainBetweenStationsButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton logout;
    // End of variables declaration//GEN-END:variables
}
